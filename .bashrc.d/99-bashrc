# .bashrc.d/bashrc
# /* vim: set filetype=rc : */

if [ "$(command -v eza)" ]; then
  alias lla='eza -la --icons=auto --group-directories-first'
fi

if [ "$(command -v bws)" ]; then
  source <(bws completions bash)
fi

if [ "$(command -v tea)" ]; then
  if ! [ -f "$HOME/.config/tea/autocomplete.sh" ]; then
    tea autocomplete bash 2>&1 >/dev/null
  fi
  PROG=tea source "$HOME/.config/tea/autocomplete.sh"
fi

# set bash completion to be more fuzzy.
# bind 'set completion-ignore-case on'

# Set my $EDITOR to nvim or vim.
#if [ "$(command -v nvim)" ]; then
#  export EDITOR="nvim"
if ! [ "$(command -v vim)" ]; then
  export EDITOR="nano"
else
  export EDITOR="vim"
fi

# Set up Node Version Manager if installed
if [ -f "$HOME/.config/nvm/nvm.sh" ]; then
    export NVM_DIR="$HOME/.config/nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi

# Set up Virtualenvwrapper
[ -f "/usr/share/virtualenvwrapper/virtualenvwrapper.sh" ] && \
    export WORKON_HOME="$HOME/.local/share/virtualenvs" && \
    \. /usr/share/virtualenvwrapper/virtualenvwrapper.sh && \
    export PROJECT_HOME="$HOME/git"

# pip completions
[ "$(command -v pip)" ] && source <(pip completion --bash)

# Added by Toolbox App
if [[ -d "$HOME/.local/share/JetBrains/Toolbox/scripts/" ]] ; then
  export PATH="$PATH:$HOME/.local/share/JetBrains/Toolbox/scripts"
fi

# Ensure proper locale
export LC_ALL=en_CA.UTF-8
export LANG=en_CA.UTF-8

# Set tmux tmpdir when in a distrobox
# Not sure if this is even working.
if [[ -n $CONTAINER_ID ]]; then
  export TMUX_TMPDIR=/tmp/tmux-${CONTAINER_ID}-1000
fi

# Set GOPATH if it exists
if [[ -d $HOME/go ]]; then
  export GOPATH="$HOME/go"
  export GOBINDIR="$GOPATH/bin"
  export PATH="$PATH:$GOPATH/bin"
fi

# Add terraform completions
[ "$(command -v terraform)" ] && eval "$(complete -C /usr/bin/terraform terraform)"

# Add tailscale completions
[ "$(command -v tailscale)" ] && source <(tailscale completion bash)

# Debian Packager info
export DEBEMAIL='john@schmidthaus.rocks'
export DEBFULLNAME='John Schmidt'
export GPGKEY=729F6BE4A82641BC

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}$(show_virtual_env)\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\e[91m\]$(__git_ps1) \[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}$(show_virtual_env)\u@\h:\w$(__git_ps1) \$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    #alias grep='grep --color=auto'
    #alias fgrep='fgrep --color=auto'
    #alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
#alias ll='ls -l'
#alias la='ls -A'
#alias l='ls -CF'
